////////////////////////////////////////////////////////
//	File			:	"CSaveInfo.h"
//
//	Author			:	Brian Kelsey (BK)
//
//	Purpose			:	Saves the info for the game settings
////////////////////////////////////////////////////////
#ifndef	_SAVEINFO_H
#define	_SAVEINFO_H

class CSaveInfo
{
	int		m_nScreenWidth;
	int		m_nScreenHeight;
	int		m_nNextLevel;
	int		m_nPlayerMoney;
	bool	m_bWindowed;
	bool	m_bVSync;

	// Make a true singleton
	CSaveInfo();
	CSaveInfo(const CSaveInfo& pState);
	CSaveInfo& operator=(const CSaveInfo& pSI) { return *this; }
	virtual	~CSaveInfo();

	static CSaveInfo* m_pInstance;

public:
	//////////////////////////////////////////////////////////////////////////
	// GetInstance():		Gets the static instance of the saved information
	//						returning a pointer to the instance
	//
	// Return:				CSaveInfo*
	//////////////////////////////////////////////////////////////////////////
	static CSaveInfo* GetInstance();

	//////////////////////////////////////////////////////////////////////////
	//	DeleteInstance():	Deletes the instance of the save info
	//
	//	Return:				void
	//////////////////////////////////////////////////////////////////////////
	void DeleteInstance();

	//////////////////////////////////////////////////////////////////////////
	// Initialize():		Inits the save info.  Reading information in
	//						from a file
	//
	// Return:				CSaveInfo*
	//////////////////////////////////////////////////////////////////////////
	static CSaveInfo* Initialize();

	//////////////////////////////////////////////////////////////////////////
	// Save():				Saves all information about the game
	//
	// Return:				void
	//////////////////////////////////////////////////////////////////////////
	void Save();

	//////////////////////////////////////////////////////////////////////////
	// Load():				Loads all information about the game from a
	//						save file
	//
	// Return:				void
	//////////////////////////////////////////////////////////////////////////
	void Load();

	//////////////////////////////////////////////////////////////////////////
	//	Accessors
	//////////////////////////////////////////////////////////////////////////
	int GetScreenWidth()		{ return m_nScreenWidth; }
	int GetScreenHeight()		{ return m_nScreenHeight; }
	int GetNextLevel()			{ return m_nNextLevel; }
	bool GetIsWindowed()		{ return m_bWindowed; }
	bool GetVSync()				{ return m_bVSync; }

	//////////////////////////////////////////////////////////////////////////
	//	Mutators
	//////////////////////////////////////////////////////////////////////////
	void SetScreenDimensions(int width, int height)		{ m_nScreenWidth = width; m_nScreenHeight = height; }
	void SetIsWindowed(bool bWindowed)					{ m_bWindowed = bWindowed; }
	void ChangeWindowed()								{ m_bWindowed = !m_bWindowed; }
	void SetVSync(bool bVSync)							{ m_bVSync = bVSync; }
};

#endif