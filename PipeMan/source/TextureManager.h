//////////////////////////////////////////////////////////////////////////
//	File:		TextureManager.h
//	Purpose:	A manager to handle the loading and unloading of textures
//////////////////////////////////////////////////////////////////////////
#ifndef _TEXTUREMANAGER_H_
#define _TEXTUREMANAGER_H_

//	todo use custom list
#include <list>
using std::list;

#include "Texture.h"

//////////////////////////////////////////////////////////////////////////
//	Forward declarations
//////////////////////////////////////////////////////////////////////////
struct IDirect3DDevice9;

//////////////////////////////////////////////////////////////////////////
//	Class Declaration
//////////////////////////////////////////////////////////////////////////
class CTextureManager
{
private:
	list<CTexture>		m_Textures;	//	list of textures
	IDirect3DDevice9*	m_pDevice;	//	the device

	//////////////////////////////////////////////////////////////////////////
	//	Constructors
	//////////////////////////////////////////////////////////////////////////
	inline CTextureManager() : m_pDevice(0) { }
	inline ~CTextureManager() { }

	//////////////////////////////////////////////////////////////////////////
	//	Disabled for singleton
	//////////////////////////////////////////////////////////////////////////
	CTextureManager(const CTextureManager& alTM);
	CTextureManager& operator=(const CTextureManager& alTM);
public:

	//////////////////////////////////////////////////////////////////////////
	//	Creates and returns the only instance of the class
	//////////////////////////////////////////////////////////////////////////
	static CTextureManager* GetInstance()
	{
		static CTextureManager Instance;
		return &Instance;
	}

	//////////////////////////////////////////////////////////////////////////
	//	Func Name:	Initialize
	//	Purpose:	Initializes the texture manager
	//	In:			IDirect3DDevice9* pDevice -- pointer to the D3D device
	//	Out:		None
	//	Return:		bool -- true if successfully initialized
	//////////////////////////////////////////////////////////////////////////
	bool Initialize(IDirect3DDevice9* pDevice);

	//////////////////////////////////////////////////////////////////////////
	//	Func Name:	LoadTexture
	//	Purpose:	Loads a texture from a file
	//	In:			const char* szFileName			-- name of the texture to be loaded
	//				const unsigned long dwColorKey  -- specifies a color to avoid when
	//												   drawing
	//	Out:		None
	//	Return:		CTexture* -- pointer to the loaded texture
	//////////////////////////////////////////////////////////////////////////
	CTexture* LoadTexture(const char* szFileName, const unsigned long dwColorKey = 0);
	
	//////////////////////////////////////////////////////////////////////////
	//	Func Name:	UnloadTexture
	//	Purpose:	Unloads a texture from memory if reference count reaches 0
	//	In:			CTexture* pTexture -- texture to unload
	//	Out:		None
	//	Return:		Void
	//////////////////////////////////////////////////////////////////////////
	void UnloadTexture(CTexture* pTexture);

	//////////////////////////////////////////////////////////////////////////
	//	Func Name:	Shutdown
	//	Purpose:	Shuts down the texture manager and unloads all textures
	//	In:			Void
	//	Out:		None
	//	Return:		Void
	//////////////////////////////////////////////////////////////////////////
	void Shutdown();
};

#endif