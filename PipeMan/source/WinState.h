////////////////////////////////////////////////////////
//	File			:	"CWinState.h"
//
//	Author			:	Leo Cho (LC)
//
//	Purpose			:	To control the win state
////////////////////////////////////////////////////////
#ifndef _WINSTATE_H_
#define _WINSTATE_H_

#include "IGameState.h"

class CWinState : public IGameState
{
private:
	// Make a true singleton
	CWinState( char* szMSFName );
	CWinState(const CWinState& pState);
	CWinState& operator=(const CWinState& pState);
	~CWinState();

public:

	//////////////////////////////////////////////////////////////////////////
	// GetInstance():		Gets the static instance of the state
	//						returning a pointer to the instance
	//
	// Return:				CWinState*
	//////////////////////////////////////////////////////////////////////////
	static CWinState* GetInstance();

	//////////////////////////////////////////////////////////////////////////
	// Enter():				Enters the game state setting up all needed
	//						information based on state
	//
	// Return:				void
	//////////////////////////////////////////////////////////////////////////
	void Enter();

	//////////////////////////////////////////////////////////////////////////
	// Exit():				Exits the game state shutting down all
	//						initialized objects and resets all data
	//
	// Return:				void
	//////////////////////////////////////////////////////////////////////////
	void Exit();

	//////////////////////////////////////////////////////////////////////////
	// Input():				Receives input from the user.
	//
	// Return:				void
	//////////////////////////////////////////////////////////////////////////
	void Input();

	//////////////////////////////////////////////////////////////////////////
	// Update():			Updates the state based on the time passed in
	//						Updates all stored objects based on this time
	//
	// In:					fElapsedTime
	//
	// Return:				bool
	//////////////////////////////////////////////////////////////////////////
	bool Update(float fElapsedTime);

	//////////////////////////////////////////////////////////////////////////
	// Render()				Renders information to the screen using
	//						the rendering engine.
	//
	// Return:				void
	//////////////////////////////////////////////////////////////////////////
	void Render();
};

#endif